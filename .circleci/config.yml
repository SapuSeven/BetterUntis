version: 2
jobs:
  build:
    working_directory: ~/betteruntis
    docker:
      - image: cimg/android:2022.03
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Prepare signing config
          command: |
            if [[ ! -v KEYSTORE_ENCODED ]]; then exit 0; fi
            echo $KEYSTORE_ENCODED | base64 --decode >> app/BetterUntis.jks
            echo 'export KEYSTORE_PASSWORD=$(echo "$KEYSTORE_PASSWORD_ENCODED" | base64 --decode)' >> $BASH_ENV
            echo 'export KEY_DEBUG_PASSWORD=$(echo "$KEY_DEBUG_PASSWORD_ENCODED" | base64 --decode)' >> $BASH_ENV
            echo 'export KEY_RELEASE_PASSWORD=$(echo "$KEY_RELEASE_PASSWORD_ENCODED" | base64 --decode)' >> $BASH_ENV
      - run:
          name: Initial build
          command: ./gradlew clean assemble bundle
      - store_artifacts:
          name: Upload build artifacts
          path: app/build/outputs
          destination: outputs
      #      - run:
      #          name: Run Tests
      #          command: ./gradlew lint test
      #      - store_artifacts:
      #          name: Upload test artifacts
      #          path: app/build/reports
      #          destination: reports
      #      - store_test_results:
      #          name: Upload test results
      #          path: app/build/test-results
      - run:
          name: Preparing workspace
          command: |
            mkdir -p workspace
            cp -r app/build/outputs workspace/outputs
      - persist_to_workspace:
          root: workspace
          paths:
            - outputs
  deploy_debug:
    docker:
      - image: cimg/base:2022.03
    working_directory: ~/betteruntis
    steps:
      - run:
          name: Check for deployability
          command: |
            if [[ ! -v SSH_DEPLOY_HOST ]]; then
              circleci-agent step halt
            fi
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy Debug Builds Over SSH
          command: |
            echo $SSH_DEPLOY_KEY_ENCODED | base64 --decode > id_rsa
            chmod 600 id_rsa
            scp -r -P $SSH_DEPLOY_PORT -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null workspace/outputs/apk/debug "$SSH_DEPLOY_USER@$SSH_DEPLOY_HOST:$SSH_DEPLOY_PATH/debug/$CIRCLE_BUILD_NUM"
  deploy_release:
    docker:
      - image: cimg/base:2022.03
    working_directory: ~/betteruntis
    steps:
      - run:
          name: Check for deployability
          command: |
            if [[ ! -v SSH_DEPLOY_HOST ]]; then
              circleci-agent step halt
            fi
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy Release Builds Over SSH
          command: |
            echo $SSH_DEPLOY_KEY_ENCODED | base64 --decode > id_rsa
            chmod 600 id_rsa
            scp -r -P $SSH_DEPLOY_PORT -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null workspace/outputs/apk/release "$SSH_DEPLOY_USER@$SSH_DEPLOY_HOST:$SSH_DEPLOY_PATH/release/$CIRCLE_TAG"
            scp -P $SSH_DEPLOY_PORT -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null workspace/outputs/mapping/release/* "$SSH_DEPLOY_USER@$SSH_DEPLOY_HOST:$SSH_DEPLOY_PATH/release/$CIRCLE_TAG/"

  deploy_fastlane:
    docker:
      - image: cimg/ruby:3.1.2
    working_directory: ~/betteruntis
    steps:
      - checkout
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Update Gems
          command: bundle check || bundle install
      - save_cache:
          paths:
            - vendor/bundle
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy to Play Store Beta track
          command: |
            echo $GOOGLE_PLAY_KEY_ENCODED | base64 --decode > fastlane/key.json
            bundle exec fastlane deploy aab:'workspace/outputs/bundle/release/app-release.aab'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy_debug:
          requires:
            - build
          filters:
            branches:
              only: develop
            tags:
              only: /.*/
      - deploy_release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
      - deploy_fastlane:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
